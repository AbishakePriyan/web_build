{"version":3,"file":"lenis-snap.min.js","sources":["../src/slide.js","../src/index.ts"],"sourcesContent":["function removeParentSticky(element) {\r\n  const position = getComputedStyle(element).position\r\n\r\n  const isSticky = position === 'sticky'\r\n\r\n  if (isSticky) {\r\n    element.style.setProperty('position', 'static')\r\n    element.dataset.sticky = 'true'\r\n  }\r\n\r\n  if (element.offsetParent) {\r\n    removeParentSticky(element.offsetParent)\r\n  }\r\n}\r\n\r\nfunction addParentSticky(element) {\r\n  if (element?.dataset?.sticky === 'true') {\r\n    element.style.removeProperty('position')\r\n    element.dataset.sticky = 'true'\r\n    delete element.dataset.sticky\r\n  }\r\n\r\n  if (element.parentNode) {\r\n    addParentSticky(element.parentNode)\r\n  }\r\n}\r\n\r\nfunction offsetTop(element, accumulator = 0) {\r\n  const top = accumulator + element.offsetTop\r\n  if (element.offsetParent) {\r\n    return offsetTop(element.offsetParent, top)\r\n  }\r\n  return top\r\n}\r\n\r\nfunction offsetLeft(element, accumulator = 0) {\r\n  const left = accumulator + element.offsetLeft\r\n  if (element.offsetParent) {\r\n    return offsetLeft(element.offsetParent, left)\r\n  }\r\n  return left\r\n}\r\n\r\nfunction scrollTop(element, accumulator = 0) {\r\n  const top = accumulator + element.scrollTop\r\n  if (element.offsetParent) {\r\n    return scrollTop(element.offsetParent, top)\r\n  }\r\n  return top + window.scrollY\r\n}\r\n\r\nfunction scrollLeft(element, accumulator = 0) {\r\n  const left = accumulator + element.scrollLeft\r\n  if (element.offsetParent) {\r\n    return scrollLeft(element.offsetParent, left)\r\n  }\r\n  return left + window.scrollX\r\n}\r\n\r\nconst ignoreSticky = true\r\nconst ignoreTransform = false\r\n\r\nexport default class Slide {\r\n  constructor(element, { align = 'start', type = 'mandatory' } = {}) {\r\n    this.element = element\r\n    this.align = align\r\n    this.type = type\r\n\r\n    this.rect = {}\r\n\r\n    this.wrapperResizeObserver = new ResizeObserver(this.onWrapperResize)\r\n    this.wrapperResizeObserver.observe(document.body)\r\n\r\n    this.resizeObserver = new ResizeObserver(this.onResize)\r\n    this.resizeObserver.observe(this.element)\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver.disconnect()\r\n    this.resizeObserver.disconnect()\r\n  }\r\n\r\n  setRect({ top, left, width, height, element }) {\r\n    top = top ?? this.rect.top\r\n    left = left ?? this.rect.left\r\n    width = width ?? this.rect.width\r\n    height = height ?? this.rect.height\r\n    element = element ?? this.rect.element\r\n\r\n    if (\r\n      top === this.rect.top &&\r\n      left === this.rect.left &&\r\n      width === this.rect.width &&\r\n      height === this.rect.height &&\r\n      element === this.rect.element\r\n    )\r\n      return\r\n\r\n    this.rect.top = top\r\n    this.rect.y = top\r\n    this.rect.width = width\r\n    this.rect.height = height\r\n    this.rect.left = left\r\n    this.rect.x = left\r\n    this.rect.bottom = top + height\r\n    this.rect.right = left + width\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    let top, left\r\n\r\n    if (ignoreSticky) removeParentSticky(this.element)\r\n    if (ignoreTransform) {\r\n      top = offsetTop(this.element)\r\n      left = offsetLeft(this.element)\r\n    } else {\r\n      const rect = this.element.getBoundingClientRect()\r\n      top = rect.top + scrollTop(this.element)\r\n      left = rect.left + scrollLeft(this.element)\r\n    }\r\n    if (ignoreSticky) addParentSticky(this.element)\r\n\r\n    this.setRect({ top, left })\r\n  }\r\n\r\n  onResize = ([entry]) => {\r\n    const width = entry.borderBoxSize[0].inlineSize\r\n    const height = entry.borderBoxSize[0].blockSize\r\n\r\n    this.setRect({ width, height })\r\n  }\r\n}\r\n","import Slide from './slide'\r\n\r\nexport default class Snap {\r\n  constructor(lenis) {\r\n    this.lenis = lenis\r\n    this.elements = new Map()\r\n\r\n    this.viewport = {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    }\r\n    this.onWindowResize()\r\n    window.addEventListener('resize', this.onWindowResize)\r\n\r\n    this.lenis.on('scroll', this.onScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.lenis.off('scroll', this.onScroll)\r\n    window.removeEventListener('resize', this.onWindowResize)\r\n    this.elements.forEach((slide) => slide.destroy())\r\n  }\r\n\r\n  add(element, options = {}) {\r\n    this.elements.set(element, new Slide(element, options))\r\n  }\r\n\r\n  remove(element) {\r\n    this.elements.delete(element)\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.viewport.width = window.innerWidth\r\n    this.viewport.height = window.innerHeight\r\n  }\r\n\r\n  onScroll = (e) => {\r\n    console.log(e.isNativeScroll, e.velocity)\r\n    // console.log('scroll', e.isScrolling)\r\n\r\n    // console.log('scroll', e.scroll, e.velocity, e.isScrolling)\r\n\r\n    if (e.velocity === 0) {\r\n      // console.log('not scrolling anymore')\r\n\r\n      this.elements.forEach(({ rect, type, align }) => {\r\n        let snap\r\n\r\n        if (align === 'start') {\r\n          snap = rect.top\r\n        } else if (align === 'center') {\r\n          snap = rect.top + rect.height / 2 - this.viewport.height / 2\r\n        } else if (align === 'end') {\r\n          snap = rect.top + rect.height - this.viewport.height\r\n        }\r\n\r\n        console.log('snap', snap)\r\n\r\n        if (\r\n          snap !== undefined\r\n          // && e.scroll > snap - this.viewport.height / 2 &&\r\n          // e.scroll < snap + this.viewport.height / 2\r\n        ) {\r\n          // this.lenis.scrollTo(snap)\r\n        }\r\n\r\n        // setTimeout(() => {\r\n        // console.log('scroll to', slide.rect.top + slide.rect.height / 2)\r\n\r\n        // }, 0)\r\n        // console.log(\r\n        //   e.scroll,\r\n        //   slide.type,\r\n        //   slide.align,\r\n        //   slide.rect.top + slide.rect.height / 2\r\n        // )\r\n      })\r\n    }\r\n  }\r\n}\r\n"],"names":["removeParentSticky","element","getComputedStyle","position","style","setProperty","dataset","sticky","offsetParent","addParentSticky","removeProperty","parentNode","scrollTop","accumulator","top","window","scrollY","scrollLeft","left","scrollX","Slide","constructor","align","type","this","rect","wrapperResizeObserver","ResizeObserver","onWrapperResize","observe","document","body","resizeObserver","onResize","destroy","disconnect","setRect","width","height","y","x","bottom","right","getBoundingClientRect","entry","borderBoxSize","inlineSize","blockSize","Snap","lenis","_this","onWindowResize","viewport","innerWidth","innerHeight","onScroll","e","console","log","isNativeScroll","velocity","elements","forEach","_a","snap","Map","addEventListener","on","prototype","off","removeEventListener","slide","add","options","set","remove","delete"],"mappings":"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"}