{"version":3,"file":"lenis.umd.js","sources":["../maths.js","../animate.js","../observed-element.js","../virtual-scroll.js","../index.js"],"sourcesContent":["export function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\nexport function truncate(value, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\nexport function lerp(start, end, amt) {\r\n  return (1 - amt) * start + amt * end\r\n}\r\n\r\nexport function clampedModulo(dividend, divisor) {\r\n  let remainder = dividend % divisor\r\n\r\n  if ((divisor > 0 && remainder < 0) || (divisor < 0 && remainder > 0)) {\r\n    remainder += divisor\r\n  }\r\n\r\n  return remainder\r\n}\r\n","import { clamp, lerp } from './maths'\r\n\r\nexport class Animate {\r\n  advance(deltaTime) {\r\n    if (!this.isRunning) return\r\n\r\n    if (this.value === this.from) {\r\n      this.onStart?.(this.from)\r\n    }\r\n\r\n    let completed = false\r\n\r\n    if (this.lerp) {\r\n      this.value = lerp(this.value, this.to, this.lerp)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    }\r\n\r\n    this.onUpdate?.(this.value)\r\n\r\n    if (completed) {\r\n      this.onComplete?.(this.to)\r\n      this.stop()\r\n    }\r\n  }\r\n\r\n  // get progress() {\r\n  //   return this.currentTime / this.duration\r\n  // }\r\n\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  fromTo(\r\n    from,\r\n    to,\r\n    {\r\n      lerp = 0.1,\r\n      duration = 1,\r\n      easing = (t) => t,\r\n      onStart,\r\n      onUpdate,\r\n      onComplete,\r\n    }\r\n  ) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    this.onStart = onStart\r\n    this.onUpdate = onUpdate\r\n    this.onComplete = onComplete\r\n  }\r\n}\r\n","export class ObservedElement {\r\n  #resizeObserver\r\n\r\n  constructor(element) {\r\n    this.element = element\r\n\r\n    if (element === window) {\r\n      window.addEventListener('resize', this.#onWindowResize)\r\n      this.#onWindowResize()\r\n    } else {\r\n      this.width = this.element.offsetWidth\r\n      this.height = this.element.offsetHeight\r\n\r\n      this.#resizeObserver = new ResizeObserver(this.#onResize)\r\n      this.#resizeObserver.observe(this.element)\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    window.removeEventListener('resize', this.onWindowResize)\r\n    this.#resizeObserver.disconnect()\r\n  }\r\n\r\n  #onResize = ([entry]) => {\r\n    if (entry) {\r\n      const { width, height } = entry.contentRect\r\n      this.width = width\r\n      this.height = height\r\n    }\r\n  }\r\n\r\n  #onWindowResize = () => {\r\n    this.width = window.innerWidth\r\n    this.height = window.innerHeight\r\n  }\r\n}\r\n","import { createNanoEvents } from 'nanoevents'\r\n\r\nexport class VirtualScroll {\r\n  #wheelMultiplier\r\n  #touchMultiplier\r\n  #touchStart\r\n  #emitter\r\n\r\n  constructor(element, { wheelMultiplier = 1, touchMultiplier = 2 }) {\r\n    this.element = element\r\n    this.#wheelMultiplier = wheelMultiplier\r\n    this.#touchMultiplier = touchMultiplier\r\n\r\n    this.#touchStart = {\r\n      x: null,\r\n      y: null,\r\n    }\r\n\r\n    this.#emitter = createNanoEvents()\r\n\r\n    this.element.addEventListener('wheel', this.#onWheel, { passive: false })\r\n    this.element.addEventListener('touchstart', this.#onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchmove', this.#onTouchMove, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  on(event, callback) {\r\n    return this.#emitter.on(event, callback)\r\n  }\r\n\r\n  destroy() {\r\n    this.#emitter.events = {}\r\n\r\n    this.element.removeEventListener('wheel', this.#onWheel, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchstart', this.#onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchmove', this.#onTouchMove, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  #onTouchStart = (event) => {\r\n    const { pageX, pageY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.#touchStart.x = pageX\r\n    this.#touchStart.y = pageY\r\n  }\r\n\r\n  #onTouchMove = (event) => {\r\n    const { pageX, pageY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(pageX - this.#touchStart.x) * this.#touchMultiplier\r\n    const deltaY = -(pageY - this.#touchStart.y) * this.#touchMultiplier\r\n\r\n    this.#touchStart.x = pageX\r\n    this.#touchStart.y = pageY\r\n\r\n    this.#emitter.emit('scroll', {\r\n      type: 'touch',\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  #onWheel = (event) => {\r\n    let { deltaX, deltaY } = event\r\n    deltaX *= this.#wheelMultiplier\r\n    deltaY *= this.#wheelMultiplier\r\n\r\n    this.#emitter.emit('scroll', { type: 'wheel', deltaX, deltaY, event })\r\n  }\r\n}\r\n","import { createNanoEvents } from 'nanoevents'\r\nimport { version } from '../../package.json'\r\nimport { Animate } from './animate'\r\nimport { clamp, clampedModulo } from './maths'\r\nimport { ObservedElement } from './observed-element'\r\nimport { VirtualScroll } from './virtual-scroll.js'\r\n\r\nexport default class Lenis {\r\n  #options\r\n  #wrapper // element with hidden overflow\r\n  #content // wrapper direct child with scrollable content\r\n  #animate\r\n  #emitter\r\n  #virtualScroll\r\n  #time\r\n  #velocity\r\n  #direction\r\n  // #scroll // current scroll value\r\n  #animatedScroll // value used for animation\r\n  #targetScroll // value to reach\r\n  #isScrolling // true when scroll is animated programatically\r\n  #isStopped // true if user should not be able to scroll - enable/disable programatically\r\n  #isLocked // same as isStopped - enable/disable when scroll reaches target\r\n  #isSmooth\r\n\r\n  constructor({\r\n    //--legacy options--//\r\n    direction,\r\n    gestureDirection,\r\n    mouseMultiplier,\r\n    smooth,\r\n    //--legacy options--//\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    smoothWheel = smooth ?? true,\r\n    smoothTouch = false,\r\n    duration,\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = duration ? null : 0.1,\r\n    infinite = false,\r\n    orientation = direction ?? 'vertical', // vertical, horizontal\r\n    gestureOrientation = gestureDirection ?? 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 2,\r\n    wheelMultiplier = mouseMultiplier ?? 1,\r\n  } = {}) {\r\n    window.lenisVersion = version\r\n\r\n    // if wrapper is html or body, fallback to window\r\n    if (wrapper === document.documentElement || wrapper === document.body) {\r\n      wrapper = window\r\n    }\r\n\r\n    this.#options = {\r\n      wrapper,\r\n      content,\r\n      smoothWheel,\r\n      smoothTouch,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n    }\r\n\r\n    this.#wrapper = new ObservedElement(wrapper)\r\n    this.#content = new ObservedElement(content)\r\n\r\n    this.#classElement.classList.add('lenis')\r\n\r\n    this.velocity = 0\r\n    this.isStopped = false\r\n    this.isSmooth = smoothWheel || smoothTouch\r\n    this.isScrolling = false\r\n    // this.#scroll =\r\n    this.#targetScroll = this.#animatedScroll = this.#actualScroll\r\n    this.#animate = new Animate()\r\n    this.#emitter = createNanoEvents()\r\n\r\n    this.#wrapper.element.addEventListener('scroll', this.#onScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.#virtualScroll = new VirtualScroll(wrapper, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n    })\r\n    this.#virtualScroll.on('scroll', this.#onVirtualScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.#emitter.events = {}\r\n\r\n    this.#wrapper.element.removeEventListener('scroll', this.#onScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.#virtualScroll.destroy()\r\n  }\r\n\r\n  on(event, callback) {\r\n    return this.#emitter.on(event, callback)\r\n  }\r\n\r\n  #setScroll(scroll) {\r\n    if (this.#options.infinite) {\r\n      scroll = this.scroll\r\n    }\r\n\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.#classElement.scrollLeft = scroll\r\n    } else {\r\n      this.#classElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  #onVirtualScroll = ({ type, deltaX, deltaY, event }) => {\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    // keep previous/next page gesture on trackpads\r\n    if (\r\n      (this.#options.gestureOrientation === 'vertical' && deltaY === 0) ||\r\n      (this.#options.gestureOrientation === 'horizontal' && deltaX === 0)\r\n    )\r\n      return\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    if (\r\n      !!event\r\n        .composedPath()\r\n        .find((node) => node?.hasAttribute?.('data-lenis-prevent'))\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.#isLocked) {\r\n      event.preventDefault()\r\n      return\r\n    }\r\n\r\n    this.isSmooth =\r\n      (this.#options.smoothTouch && type === 'touch') ||\r\n      (this.#options.smoothWheel && type === 'wheel')\r\n\r\n    if (!this.isSmooth) return\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.#options.gestureOrientation === 'both') {\r\n      delta = deltaX + deltaY\r\n    } else if (this.#options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    this.scrollTo(this.#targetScroll + delta, {}, false)\r\n  }\r\n\r\n  get options() {\r\n    return { ...this.#options }\r\n  }\r\n\r\n  get #classElement() {\r\n    return this.#wrapper.element === window\r\n      ? this.#content.element\r\n      : this.#wrapper.element\r\n  }\r\n\r\n  get limit() {\r\n    return this.isHorizontal\r\n      ? this.#content.width - this.#wrapper.width\r\n      : this.#content.height - this.#wrapper.height\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.#options.orientation === 'horizontal'\r\n  }\r\n\r\n  get #actualScroll() {\r\n    // value browser takes into account\r\n    return this.#classElement.scrollTop\r\n  }\r\n\r\n  get scroll() {\r\n    return clampedModulo(this.#animatedScroll, this.limit)\r\n  }\r\n\r\n  get progress() {\r\n    return this.scroll / this.limit\r\n  }\r\n\r\n  get velocity() {\r\n    return this.#velocity\r\n  }\r\n\r\n  set velocity(value) {\r\n    this.#velocity = value\r\n    if (value !== 0) {\r\n      this.#direction = Math.sign(value)\r\n    }\r\n  }\r\n\r\n  get direction() {\r\n    return this.#direction\r\n  }\r\n\r\n  get isSmooth() {\r\n    return this.#isSmooth\r\n  }\r\n\r\n  set isSmooth(value) {\r\n    this.#isSmooth = value\r\n    this.#classElement.classList.toggle('lenis-smooth', value)\r\n  }\r\n\r\n  get isScrolling() {\r\n    return this.#isScrolling\r\n  }\r\n\r\n  set isScrolling(value) {\r\n    this.#isScrolling = value\r\n    this.#classElement.classList.toggle('lenis-scrolling', value)\r\n  }\r\n\r\n  get isStopped() {\r\n    return this.#isStopped\r\n  }\r\n\r\n  set isStopped(value) {\r\n    this.#isStopped = value\r\n    this.#classElement.classList.toggle('lenis-stopped', value)\r\n  }\r\n\r\n  emit() {\r\n    this.#emitter.emit('scroll', this)\r\n  }\r\n\r\n  #onScroll = () => {\r\n    if (!this.isScrolling) {\r\n      // const lastScroll = this.#scroll\r\n      const lastScroll = this.#animatedScroll\r\n\r\n      // this.#scroll =\r\n      this.#animatedScroll = this.#targetScroll = this.#actualScroll\r\n\r\n      // this.#velocity = this.#scroll - lastScroll\r\n      // this.#velocity = this.#animatedScroll - lastScroll\r\n      // this.velocity = this.#animatedScroll - lastScroll\r\n      // this.#direction = Math.sign(this.#velocity)\r\n      this.velocity = 0\r\n      this.emit()\r\n    }\r\n    // else {\r\n    //   this.#scroll = this.#actualScroll\r\n    // }\r\n  }\r\n\r\n  start() {\r\n    this.isStopped = false\r\n  }\r\n\r\n  stop() {\r\n    this.isStopped = true\r\n  }\r\n\r\n  raf(time) {\r\n    const deltaTime = time - (this.#time || time)\r\n    this.#time = time\r\n\r\n    this.#animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  scrollTo(\r\n    target,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.#options.duration,\r\n      easing = this.#options.easing,\r\n      lerp = this.#options.lerp,\r\n      onComplete,\r\n    } = {},\r\n    programmatic = true // called from outside of the class\r\n  ) {\r\n    // keywords\r\n    if (['top', 'left', 'start'].includes(target)) {\r\n      target = 0\r\n    } else if (['bottom', 'right', 'end'].includes(target)) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.#wrapper.element !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.#wrapper.element.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.#animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n\r\n    if (this.#options.infinite) {\r\n      if (programmatic) {\r\n        this.#targetScroll = this.#animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    // if (this.#scroll === target) {\r\n    if (this.#animatedScroll === target) {\r\n      onComplete?.()\r\n      return\r\n    }\r\n\r\n    if (immediate) {\r\n      // this.#scroll = this.#animatedScroll = this.#targetScroll = target\r\n      this.#animatedScroll = this.#targetScroll = target\r\n      this.#setScroll(target)\r\n      // this.isScrolling = true\r\n      this.emit()\r\n      onComplete?.()\r\n      return\r\n    }\r\n\r\n    if (!programmatic) {\r\n      this.#targetScroll = target\r\n    }\r\n\r\n    this.#animate.fromTo(this.#animatedScroll, target, {\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      onStart: () => {\r\n        // user is scrolling\r\n        if (lock) this.#isLocked = true\r\n        this.isScrolling = true\r\n      },\r\n      onUpdate: (value) => {\r\n        // this.#velocity = value - this.#animatedScroll\r\n        this.velocity = value - this.#animatedScroll\r\n        // this.#direction = Math.sign(this.#velocity)\r\n\r\n        this.#animatedScroll = value\r\n        this.#setScroll(value)\r\n\r\n        if (programmatic) {\r\n          // fix velocity during programmatic scrollTo\r\n          // wheel during programmatic should stop it\r\n          this.#targetScroll = value\r\n        }\r\n\r\n        this.emit()\r\n      },\r\n      onComplete: (value) => {\r\n        // user is not scrolling anymore\r\n        if (lock) this.#isLocked = false\r\n        requestAnimationFrame(() => {\r\n          this.isScrolling = false\r\n        })\r\n        this.velocity = 0\r\n        // this.#needsEmit = true;\r\n        this.emit()\r\n\r\n        onComplete?.()\r\n      },\r\n    })\r\n  }\r\n}\r\n"],"names":["clamp","min","input","max","Math","Animate","_proto","prototype","advance","deltaTime","this","isRunning","_this$onStart","value","from","onStart","call","amt","_this$onComplete","lerp","to","round","completed","currentTime","linearProgress","duration","easing","easedProgress","_this$onUpdate","onUpdate","onComplete","stop","fromTo","_ref","_ref$lerp","_ref$duration","t","_resizeObserver","_classPrivateFieldLooseKey","_onResize","_onWindowResize","ObservedElement","element","_this","Object","defineProperty","writable","entry","contentRect","height","_entry$contentRect","width","window","innerWidth","innerHeight","addEventListener","_classPrivateFieldLooseBase","offsetWidth","offsetHeight","ResizeObserver","observe","destroy","removeEventListener","onWindowResize","disconnect","VirtualScroll","wheelMultiplier","_ref$wheelMultiplier","touchMultiplier","_ref$touchMultiplier","_wheelMultiplier","_touchMultiplier","_touchStart","_emitter","_onTouchStart","event","targetTouches","pageX","pageY","x","y","_ref3","deltaX","deltaY","emit","type","_onWheel","createNanoEvents","passive","_onTouchMove","on","callback","events","_options","_wrapper","_content","_animate","_virtualScroll","_time","_velocity","_direction","_animatedScroll","_targetScroll","_isScrolling","_isStopped","_isLocked","_isSmooth","_setScroll","_onVirtualScroll","_classElement","_actualScroll","_onScroll","scroll","infinite","isHorizontal","scrollLeft","scrollTop","_get_classElement","_get_actualScroll","Lenis","_temp","direction","gestureDirection","mouseMultiplier","smooth","wrapper","_ref$wrapper","content","document","documentElement","_ref$content","_ref$smoothWheel","smoothWheel","smoothTouch","_ref$smoothTouch","_ref$easing","pow","_ref$infinite","orientation","_ref$orientation","_ref$gestureOrientati","gestureOrientation","get","set","_setScroll2","_ref2","ctrlKey","composedPath","find","node","hasAttribute","isStopped","preventDefault","isSmooth","delta","scrollTo","isScrolling","velocity","lenisVersion","body","classList","add","start","raf","time","target","_temp2","programmatic","_this2","_ref3$offset","offset","immediate","_ref3$immediate","_ref3$lock","lock","_ref3$duration","_ref3$easing","_ref3$lerp","includes","limit","_target","querySelector","nodeType","wrapperRect","getBoundingClientRect","left","top","rect","requestAnimationFrame","key","_extends","remainder","divisor","clampedModulo","sign","toggle"],"mappings":"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"}