{"version":3,"file":"lenis.modern.mjs","sources":["../src/maths.js","../src/animate.js","../src/observed-element.js","../src/virtual-scroll.js","../src/index.js"],"sourcesContent":["export function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\nexport function truncate(value, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\nexport function lerp(start, end, amt) {\r\n  return (1 - amt) * start + amt * end\r\n}\r\n\r\nexport function clampedModulo(dividend, divisor) {\r\n  let remainder = dividend % divisor\r\n\r\n  if ((divisor > 0 && remainder < 0) || (divisor < 0 && remainder > 0)) {\r\n    remainder += divisor\r\n  }\r\n\r\n  return remainder\r\n}\r\n","import { clamp, lerp } from './maths'\r\n\r\nexport class Animate {\r\n  advance(deltaTime) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.lerp) {\r\n      this.value = lerp(this.value, this.to, this.lerp)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    }\r\n\r\n    this.onUpdate?.(this.value, { completed })\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  fromTo(from, to, { lerp = 0.1, duration = 1, easing = (t) => t, onUpdate }) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n","export class ObservedElement {\r\n  #resizeObserver\r\n\r\n  constructor(element) {\r\n    this.element = element\r\n\r\n    if (element === window) {\r\n      window.addEventListener('resize', this.#onWindowResize)\r\n      this.#onWindowResize()\r\n    } else {\r\n      this.width = this.element.offsetWidth\r\n      this.height = this.element.offsetHeight\r\n\r\n      this.#resizeObserver = new ResizeObserver(this.#onResize)\r\n      this.#resizeObserver.observe(this.element)\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    window.removeEventListener('resize', this.onWindowResize)\r\n    this.#resizeObserver.disconnect()\r\n  }\r\n\r\n  #onResize = ([entry]) => {\r\n    if (entry) {\r\n      const { width, height } = entry.contentRect\r\n      this.width = width\r\n      this.height = height\r\n    }\r\n  }\r\n\r\n  #onWindowResize = () => {\r\n    this.width = window.innerWidth\r\n    this.height = window.innerHeight\r\n  }\r\n}\r\n","import { createNanoEvents } from 'nanoevents'\r\nimport { clamp } from './maths'\r\n\r\nexport class VirtualScroll {\r\n  #wheelMultiplier\r\n  #touchMultiplier\r\n  #normalizeWheel\r\n  #touchStart\r\n  #emitter\r\n\r\n  constructor(\r\n    element,\r\n    { wheelMultiplier = 1, touchMultiplier = 2, normalizeWheel = false }\r\n  ) {\r\n    this.element = element\r\n    this.#wheelMultiplier = wheelMultiplier\r\n    this.#touchMultiplier = touchMultiplier\r\n    this.#normalizeWheel = normalizeWheel\r\n\r\n    this.#touchStart = {\r\n      x: null,\r\n      y: null,\r\n    }\r\n\r\n    this.#emitter = createNanoEvents()\r\n\r\n    this.element.addEventListener('wheel', this.#onWheel, { passive: false })\r\n    this.element.addEventListener('touchstart', this.#onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchmove', this.#onTouchMove, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  on(event, callback) {\r\n    return this.#emitter.on(event, callback)\r\n  }\r\n\r\n  destroy() {\r\n    this.#emitter.events = {}\r\n\r\n    this.element.removeEventListener('wheel', this.#onWheel, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchstart', this.#onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchmove', this.#onTouchMove, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  #onTouchStart = (event) => {\r\n    const { pageX, pageY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.#touchStart.x = pageX\r\n    this.#touchStart.y = pageY\r\n  }\r\n\r\n  #onTouchMove = (event) => {\r\n    const { pageX, pageY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(pageX - this.#touchStart.x) * this.#touchMultiplier\r\n    const deltaY = -(pageY - this.#touchStart.y) * this.#touchMultiplier\r\n\r\n    this.#touchStart.x = pageX\r\n    this.#touchStart.y = pageY\r\n\r\n    this.#emitter.emit('scroll', {\r\n      type: 'touch',\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  #onWheel = (event) => {\r\n    let { deltaX, deltaY } = event\r\n\r\n    if (this.#normalizeWheel) {\r\n      deltaX = clamp(-100, deltaX, 100)\r\n      deltaY = clamp(-100, deltaY, 100)\r\n    }\r\n\r\n    deltaX *= this.#wheelMultiplier\r\n    deltaY *= this.#wheelMultiplier\r\n\r\n    this.#emitter.emit('scroll', { type: 'wheel', deltaX, deltaY, event })\r\n  }\r\n}\r\n","import { createNanoEvents } from 'nanoevents'\r\nimport { version } from '../package.json'\r\nimport { Animate } from './animate'\r\nimport { clamp, clampedModulo } from './maths'\r\nimport { ObservedElement } from './observed-element'\r\nimport { VirtualScroll } from './virtual-scroll.js'\r\n\r\n// Technical explaination\r\n// - listen to 'wheel' events\r\n// - prevent event to prevent scroll\r\n// - normalize wheel delta\r\n// - add delta to targetScroll\r\n// - animate scroll to targetScroll (smooth context)\r\n// - if animation is not running, listen to 'scroll' events (native context)\r\n\r\nexport default class Lenis {\r\n  // isScrolling = true when scroll is animating\r\n  // isStopped = true if user should not be able to scroll - enable/disable programatically\r\n  // isSmooth = true if scroll should be animated\r\n  // isLocked = same as isStopped but enabled/disabled when scroll reaches target\r\n\r\n  /**\r\n   * @typedef {(t: number) => number} EasingFunction\r\n   * @typedef {'vertical' | 'horizontal'} Orientation\r\n   * @typedef {'vertical' | 'horizontal' | 'both'} GestureOrientation\r\n   *\r\n   * @typedef LenisOptions\r\n   * @property {Orientation} [direction]\r\n   * @property {GestureOrientation} [gestureDirection]\r\n   * @property {number} [mouseMultiplier]\r\n   * @property {boolean} [smooth]\r\n   *\r\n   * @property {Window | HTMLElement} [wrapper]\r\n   * @property {HTMLElement} [content]\r\n   * @property {boolean} [smoothWheel]\r\n   * @property {boolean} [smoothTouch]\r\n   * @property {number} [duration]\r\n   * @property {EasingFunction} [easing]\r\n   * @property {number} [lerp]\r\n   * @property {boolean} [infinite]\r\n   * @property {Orientation} [orientation]\r\n   * @property {GestureOrientation} [gestureOrientation]\r\n   * @property {number} [touchMultiplier]\r\n   * @property {number} [wheelMultiplier]\r\n   * @property {number} [normalizeWheel]\r\n   *\r\n   * @param {LenisOptions}\r\n   */\r\n  constructor({\r\n    //--legacy options--//\r\n    direction,\r\n    gestureDirection,\r\n    mouseMultiplier,\r\n    smooth,\r\n    //--legacy options--//\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    smoothWheel = smooth ?? true,\r\n    smoothTouch = false,\r\n    duration, // in seconds\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = duration ? null : 0.1,\r\n    infinite = false,\r\n    orientation = direction ?? 'vertical', // vertical, horizontal\r\n    gestureOrientation = gestureDirection ?? 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 2,\r\n    wheelMultiplier = mouseMultiplier ?? 1,\r\n    normalizeWheel = true,\r\n  } = {}) {\r\n    // warn about legacy options\r\n    if (direction) {\r\n      console.warn(\r\n        'Lenis: `direction` option is deprecated, use `orientation` instead'\r\n      )\r\n    }\r\n    if (gestureDirection) {\r\n      console.warn(\r\n        'Lenis: `gestureDirection` option is deprecated, use `gestureOrientation` instead'\r\n      )\r\n    }\r\n    if (mouseMultiplier) {\r\n      console.warn(\r\n        'Lenis: `mouseMultiplier` option is deprecated, use `wheelMultiplier` instead'\r\n      )\r\n    }\r\n    if (smooth) {\r\n      console.warn(\r\n        'Lenis: `smooth` option is deprecated, use `smoothWheel` instead'\r\n      )\r\n    }\r\n\r\n    window.lenisVersion = version\r\n\r\n    // if wrapper is html or body, fallback to window\r\n    if (wrapper === document.documentElement || wrapper === document.body) {\r\n      wrapper = window\r\n    }\r\n\r\n    this.options = {\r\n      wrapper,\r\n      content,\r\n      smoothWheel,\r\n      smoothTouch,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n    }\r\n\r\n    this.wrapper = new ObservedElement(wrapper)\r\n    this.content = new ObservedElement(content)\r\n\r\n    this.rootElement.classList.add('lenis')\r\n\r\n    this.velocity = 0\r\n    this.isStopped = false\r\n    this.isSmooth = smoothWheel || smoothTouch\r\n    this.isScrolling = false\r\n    this.targetScroll = this.animatedScroll = this.actualScroll\r\n    this.animate = new Animate()\r\n    this.emitter = createNanoEvents()\r\n\r\n    this.wrapper.element.addEventListener('scroll', this.onScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll = new VirtualScroll(wrapper, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n    })\r\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.events = {}\r\n\r\n    this.wrapper.element.removeEventListener('scroll', this.onScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.destroy()\r\n  }\r\n\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  off(event, callback) {\r\n    this.emitter.events[event] = this.emitter.events[event]?.filter(\r\n      (i) => callback !== i\r\n    )\r\n  }\r\n\r\n  setScroll(scroll) {\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.rootElement.scrollLeft = scroll\r\n    } else {\r\n      this.rootElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  onVirtualScroll = ({ type, deltaX, deltaY, event }) => {\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    // keep previous/next page gesture on trackpads\r\n    if (\r\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) ||\r\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0)\r\n    )\r\n      return\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    if (\r\n      !!event\r\n        .composedPath()\r\n        .find((node) => node?.hasAttribute?.('data-lenis-prevent'))\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.isLocked) {\r\n      event.preventDefault()\r\n      return\r\n    }\r\n\r\n    this.isSmooth =\r\n      (this.options.smoothTouch && type === 'touch') ||\r\n      (this.options.smoothWheel && type === 'wheel')\r\n\r\n    if (!this.isSmooth) {\r\n      this.isScrolling = false\r\n      this.animate.stop()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.options.gestureOrientation === 'both') {\r\n      delta = deltaX + deltaY\r\n    } else if (this.options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    this.scrollTo(this.targetScroll + delta, { programmatic: false })\r\n  }\r\n\r\n  emit() {\r\n    this.emitter.emit('scroll', this)\r\n  }\r\n\r\n  onScroll = () => {\r\n    if (!this.isScrolling) {\r\n      const lastScroll = this.animatedScroll\r\n      this.animatedScroll = this.targetScroll = this.actualScroll\r\n      this.velocity = 0\r\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\r\n      this.emit()\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.isLocked = false\r\n    this.isScrolling = false\r\n    this.velocity = 0\r\n  }\r\n\r\n  start() {\r\n    this.isStopped = false\r\n\r\n    this.reset()\r\n  }\r\n\r\n  stop() {\r\n    this.isStopped = true\r\n    this.animate.stop()\r\n\r\n    this.reset()\r\n  }\r\n\r\n  raf(time) {\r\n    const deltaTime = time - (this.time || time)\r\n    this.time = time\r\n\r\n    this.animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  scrollTo(\r\n    target,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.options.duration,\r\n      easing = this.options.easing,\r\n      lerp = !duration && this.options.lerp,\r\n      onComplete,\r\n      force = false, // scroll even if stopped\r\n      programmatic = true, // called from outside of the class\r\n    } = {}\r\n  ) {\r\n    if (this.isStopped && !force) return\r\n\r\n    // keywords\r\n    if (['top', 'left', 'start'].includes(target)) {\r\n      target = 0\r\n    } else if (['bottom', 'right', 'end'].includes(target)) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.wrapper.element !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.wrapper.element.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n    target = Math.round(target)\r\n\r\n    if (this.options.infinite) {\r\n      if (programmatic) {\r\n        this.targetScroll = this.animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    if (immediate) {\r\n      this.animatedScroll = this.targetScroll = target\r\n      this.setScroll(this.scroll)\r\n      this.animate.stop()\r\n      this.reset()\r\n      this.emit()\r\n      onComplete?.()\r\n      return\r\n    }\r\n\r\n    if (!programmatic) {\r\n      this.targetScroll = target\r\n    }\r\n\r\n    this.animate.fromTo(this.animatedScroll, target, {\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      onUpdate: (value, { completed }) => {\r\n        // started\r\n        if (lock) this.isLocked = true\r\n        this.isScrolling = true\r\n\r\n        // updated\r\n        this.velocity = value - this.animatedScroll\r\n        this.direction = Math.sign(this.velocity)\r\n\r\n        this.animatedScroll = value\r\n        this.setScroll(this.scroll)\r\n\r\n        if (programmatic) {\r\n          // wheel during programmatic should stop it\r\n          this.targetScroll = value\r\n        }\r\n\r\n        // completed\r\n        if (completed) {\r\n          if (lock) this.isLocked = false\r\n          requestAnimationFrame(() => {\r\n            //avoid double scroll event\r\n            this.isScrolling = false\r\n          })\r\n          this.velocity = 0\r\n          onComplete?.()\r\n        }\r\n\r\n        this.emit()\r\n      },\r\n    })\r\n  }\r\n\r\n  get rootElement() {\r\n    return this.wrapper.element === window\r\n      ? this.content.element\r\n      : this.wrapper.element\r\n  }\r\n\r\n  get limit() {\r\n    return Math.round(\r\n      this.isHorizontal\r\n        ? this.content.width - this.wrapper.width\r\n        : this.content.height - this.wrapper.height\r\n    )\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.options.orientation === 'horizontal'\r\n  }\r\n\r\n  get actualScroll() {\r\n    // value browser takes into account\r\n    return this.isHorizontal\r\n      ? this.rootElement.scrollLeft\r\n      : this.rootElement.scrollTop\r\n  }\r\n\r\n  get scroll() {\r\n    return this.options.infinite\r\n      ? clampedModulo(this.animatedScroll, this.limit)\r\n      : this.animatedScroll\r\n  }\r\n\r\n  get progress() {\r\n    return this.scroll / this.limit\r\n  }\r\n\r\n  get isSmooth() {\r\n    return this.__isSmooth\r\n  }\r\n\r\n  set isSmooth(value) {\r\n    if (this.__isSmooth !== value) {\r\n      this.rootElement.classList.toggle('lenis-smooth', value)\r\n      this.__isSmooth = value\r\n    }\r\n  }\r\n\r\n  get isScrolling() {\r\n    return this.__isScrolling\r\n  }\r\n\r\n  set isScrolling(value) {\r\n    if (this.__isScrolling !== value) {\r\n      this.rootElement.classList.toggle('lenis-scrolling', value)\r\n      this.__isScrolling = value\r\n    }\r\n  }\r\n\r\n  get isStopped() {\r\n    return this.__isStopped\r\n  }\r\n\r\n  set isStopped(value) {\r\n    if (this.__isStopped !== value) {\r\n      this.rootElement.classList.toggle('lenis-stopped', value)\r\n      this.__isStopped = value\r\n    }\r\n  }\r\n}\r\n\r\n// Lenis.ScrollSnap = ScrollSnap\r\n// export { ScrollSnap }\r\n"],"names":["clamp","min","input","max","Math","Animate","advance","deltaTime","_this$onUpdate","this","isRunning","completed","lerp","value","amt","to","round","currentTime","linearProgress","duration","easedProgress","easing","from","onUpdate","call","stop","fromTo","t","_resizeObserver","_classPrivateFieldLooseKey","_onResize","_onWindowResize","ObservedElement","constructor","element","Object","defineProperty","writable","entry","width","height","contentRect","window","innerWidth","innerHeight","addEventListener","_classPrivateFieldLooseBase","offsetWidth","offsetHeight","ResizeObserver","observe","destroy","removeEventListener","onWindowResize","disconnect","_wheelMultiplier","_touchMultiplier","_normalizeWheel","_touchStart","_emitter","_onTouchStart","_onTouchMove","_onWheel","VirtualScroll","wheelMultiplier","touchMultiplier","normalizeWheel","event","pageX","pageY","targetTouches","x","y","deltaX","deltaY","emit","type","createNanoEvents","passive","on","callback","events","Lenis","direction","gestureDirection","mouseMultiplier","smooth","wrapper","content","document","documentElement","smoothWheel","smoothTouch","pow","infinite","orientation","gestureOrientation","onVirtualScroll","ctrlKey","options","composedPath","find","node","hasAttribute","isStopped","isLocked","preventDefault","isSmooth","isScrolling","animate","delta","scrollTo","targetScroll","programmatic","onScroll","lastScroll","animatedScroll","actualScroll","velocity","sign","console","warn","lenisVersion","body","rootElement","classList","add","emitter","virtualScroll","off","_this$emitter$events$","filter","i","setScroll","scroll","isHorizontal","scrollLeft","scrollTop","reset","start","raf","time","target","offset","immediate","lock","onComplete","force","includes","limit","_target","querySelector","nodeType","getBoundingClientRect","wrapperRect","left","top","rect","requestAnimationFrame","dividend","divisor","remainder","clampedModulo","progress","__isSmooth","toggle","__isScrolling","__isStopped"],"mappings":"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"}